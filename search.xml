<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何搭建一个这样的网站？</title>
      <link href="/2019/04/13/1/"/>
      <url>/2019/04/13/1/</url>
      
        <content type="html"><![CDATA[<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>本文略过git或openshift或……部分，相信大家都会。</p><p>hexo 需要nodejs与npm。所以我们首先安装：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> nodejs<span class="token function">sudo</span> apt <span class="token function">install</span> nodejs-legacy<span class="token function">sudo</span> apt <span class="token function">install</span> <span class="token function">npm</span><span class="token function">sudo</span> <span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npm.taobao.org<span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> n -g<span class="token function">sudo</span> n stable<span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli</code></pre><p>然后选择一个文件夹，运行</p><pre class=" language-shell"><code class="language-shell">hexo init</code></pre><p>你的网站就部署在这个文件夹下了！</p><p>然后安装一些可能需要的包：</p><pre class=" language-shell"><code class="language-shell">npm install hexo-generator-index --savenpm install hexo-generator-archive --savenpm install hexo-generator-category --savenpm install hexo-generator-tag --savenpm install hexo-server --savenpm install hexo-deployer-git --savenpm install hexo-deployer-heroku --savenpm install hexo-deployer-rsync --savenpm install hexo-deployer-openshift --savenpm install hexo-renderer-marked --savenpm install hexo-renderer-stylus --savenpm install hexo-generator-feed --savenpm install hexo-generator-sitemap --savenpm install hexo-generator-archive --savenpm install https://github.com/CodeFalling/hexo-asset-image --save</code></pre><p>其中hexo-deployer中只需选一个你需要的。</p><p>然后在这个文件夹下试一试</p><pre class=" language-shell"><code class="language-shell">hexo ghexo s</code></pre><p>然后打开<code>127.0.0.1:4000</code>，看看是否成功呢？</p><h2 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h2><p>本博客选用<code>matery</code>主题。到<code>hexo</code>官网就可以找到&gt;_&lt;。</p><p>在<code>_config.yml</code>中找到<code>theme</code>，改成</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Extensions</span><span class="token comment" spellcheck="true">## Plugins: https://hexo.io/plugins/</span><span class="token comment" spellcheck="true">## Themes: https://hexo.io/themes/</span><span class="token key atrule">theme</span><span class="token punctuation">:</span> matery</code></pre><p>即可。</p><p>有关主题的更多内容请参考<code>theme/matery/README_CN.md</code>，这里不再赘述。</p><h2 id="数学公式支持"><a href="#数学公式支持" class="headerlink" title="数学公式支持"></a>数学公式支持</h2><p>其实前面的已经差不多了！</p><p>但是我们发现不能像<code>typora</code>中那样使用数学公式。</p><p>然后我用了$\infty$的时间去尝试着使用KaTeX渲染和使用Markdown支持渲染。然后嘛，最后虽然算是成功渲染了，但是好像不是那么正确……</p><p>之后就当我打算放弃使用图片时，突然发现<code>themes/matery/_config.yml</code>中有这么一段话：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Whether to activate the mathjax, this is a global configuration, but the post still does not open the mathjax rendering.</span><span class="token comment" spellcheck="true"># Considering that the mathjax loading is time consuming,</span><span class="token comment" spellcheck="true"># you also need to add `mathjax: true` to the Front-matter of the post that needs to be rendered.</span><span class="token comment" spellcheck="true"># 是否激活mathjax数学公式，这是全局配置，但文章仍然不会都开启mathjax渲染，</span><span class="token comment" spellcheck="true"># 考虑到mathjax加载比较耗时，你还需要在需要渲染的文章的Front-matter中再加上`mathjax: true`才行.</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">cdn</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.bootcss.com/mathjax/2.7.5/MathJax.js<span class="token punctuation">?</span>config=TeX<span class="token punctuation">-</span>AMS<span class="token punctuation">-</span>MML_HTMLorMML</code></pre><p>那不是已经说得很清楚了嘛……先前我在干什么……</p><h2 id="使用技巧和hexo相关操作"><a href="#使用技巧和hexo相关操作" class="headerlink" title="使用技巧和hexo相关操作"></a>使用技巧和hexo相关操作</h2><p>hexo常用的指令有：</p><pre class=" language-shell"><code class="language-shell">hexo clean     #清除db.json与public里面的内容hexo new file  #在source/_post下面新建一个file.md文件hexo g         #由md文件生成html静态文件hexo s         #在本地启动http服务以提供本地预览功能hexo d         #发布到GitHub</code></pre><p>建议将<code>_config.yml</code>中的<code>post_asset_folder: false</code>改为<code>true</code>。这样新建文章的时候就会同时新建一个同名文件夹，就可以把需要的东西都放进文件夹里，方便管理。</p><hr><p>以下是相关测试：</p><h2 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h2><p><strong>粗体</strong> <del>划线</del> _斜体_</p><h3 id="多级标题"><a href="#多级标题" class="headerlink" title="多级标题"></a>多级标题</h3><h4 id="多级标题-1"><a href="#多级标题-1" class="headerlink" title="多级标题"></a>多级标题</h4><blockquote><p>引用</p></blockquote><p><img src="/2019/04/13/1/1.jpg" alt="1"></p><p><img src="/2019/04/13/1/1.gif" alt="2"></p><pre class=" language-C++"><code class="language-C++">//代码块#include <bits/stdc++.h>using namespace std;int main() {    int a, b;    cin >> a >> b;    cout << a + b << endl;    return 0;}</code></pre><p><a href="https://www.baidu.com" target="_blank" rel="noopener">百度</a></p><p><a href="1.zip">下载测试</a></p><p>公式测试<br>$$<br>{ \sum_{i=1}^{n} i } = \frac{n\times(n+1)}{2} = \frac{ n ^ {2} + n}{2}<br>$$</p><p>行内公式测试$\sum\limits_{i=1}^{n}i = \frac{n\times(n+1)}{2}$</p>]]></content>
      
      
      <categories>
          
          <category> 经验&amp;教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
